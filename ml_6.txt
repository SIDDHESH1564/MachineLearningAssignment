#importing required libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd 
import sklearn



# Reading dataset
dataset = pd.read_csv(r"C:\Users\asus\Jupyter Notebook\Mall_Customers.csv")
X = dataset.iloc[:, [3, 4]].values




#importing kmeans from sklearn library
from sklearn.cluster import KMeans
wcss = [] #empty array
for i in range(1,11):
    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)
    kmeans.fit(X)
    wcss.append(kmeans.inertia_)




#plotting graph
plt.plot(range(1,11), wcss)
plt.xlabel('number of clusters')
plt.ylabel('wcss')
plt.show()





kmeans = KMeans(n_clusters=5, init = "k-means++", random_state=42)
y_kmeans = kmeans.fit_predict(X)
#predicting clusters (0,1,2,3,4)



plt.scatter(X[y_kmeans==0,0], X[y_kmeans==0,1], s=60, c='red', label = 'CLuster 1')  
#  Here, X[y_kmeans==0,0] is X axis and X[y_kmeans==0,1] is Y axis
#  We're plotting scatters for cluster=0 i.e, our first cluster , in red color
plt.scatter(X[y_kmeans==1,0], X[y_kmeans==1,1], s=60, c='blue', label = 'CLuster 2')
plt.scatter(X[y_kmeans==2,0], X[y_kmeans==2,1], s=60, c='green', label = 'CLuster 3')
plt.scatter(X[y_kmeans==3,0], X[y_kmeans==3,1], s=60, c='violet', label = 'CLuster 4')
plt.scatter(X[y_kmeans==4,0], X[y_kmeans==4,1], s=60, c='yellow', label = 'CLuster 5')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 100, c = 'black', label = 'Centroids')
plt.legend()
plt.show()